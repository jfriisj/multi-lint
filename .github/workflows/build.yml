name: Build and Publish Multi-Lint Images

on:
  push:
    branches: [main]
    paths:
      - 'images/**'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [main]
    paths:
      - 'images/**'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/multi-lint

jobs:
  # Build matrix for all image types
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: python
            context: ./images/python
          - name: javascript
            context: ./images/javascript
          - name: infrastructure
            context: ./images/infrastructure
          - name: security
            context: ./images/security
          - name: unity
            context: ./images/unity
          - name: docker
            context: ./images/docker
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  # Test job to verify images work correctly
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [python, javascript, infrastructure, security, unity, docker]
    
    steps:
      - name: Test ${{ matrix.image }} image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}:latest --stdin <<< '{"action": "list"}'

  # Create multi-arch manifest (optional)
  manifest:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    strategy:
      matrix:
        image: [python, javascript, infrastructure, security, unity, docker]
    
    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}:stable \
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}:latest
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}:stable